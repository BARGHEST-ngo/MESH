// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
  baseUrl: 'http://localhost:8080' | (string & {})
}

export type HeadscaleServiceMoveNodeBody = {
  user?: string
}

export type HeadscaleServiceSetApprovedRoutesBody = {
  routes?: Array<string>
}

export type HeadscaleServiceSetTagsBody = {
  tags?: Array<string>
}

export type ProtobufAny = {
  '@type'?: string
  [key: string]: unknown | string | undefined
}

export type RpcStatus = {
  code?: number
  message?: string
  details?: Array<ProtobufAny>
}

export type V1ApiKey = {
  id?: string
  prefix?: string
  expiration?: string
  createdAt?: string
  lastSeen?: string
}

export type V1BackfillNodeIpsResponse = {
  changes?: Array<string>
}

export type V1CreateApiKeyRequest = {
  expiration?: string
}

export type V1CreateApiKeyResponse = {
  apiKey?: string
}

export type V1CreatePreAuthKeyRequest = {
  user?: string
  reusable?: boolean
  ephemeral?: boolean
  expiration?: string
  aclTags?: Array<string>
}

export type V1CreatePreAuthKeyResponse = {
  preAuthKey?: V1PreAuthKey
}

export type V1CreateUserRequest = {
  name?: string
  displayName?: string
  email?: string
  pictureUrl?: string
}

export type V1CreateUserResponse = {
  user?: V1User
}

export type V1DebugCreateNodeRequest = {
  user?: string
  key?: string
  name?: string
  routes?: Array<string>
}

export type V1DebugCreateNodeResponse = {
  node?: V1Node
}

export type V1DeleteApiKeyResponse = {
  [key: string]: unknown
}

export type V1DeleteNodeResponse = {
  [key: string]: unknown
}

export type V1DeleteUserResponse = {
  [key: string]: unknown
}

export type V1ExpireApiKeyRequest = {
  prefix?: string
}

export type V1ExpireApiKeyResponse = {
  [key: string]: unknown
}

export type V1ExpireNodeResponse = {
  node?: V1Node
}

export type V1ExpirePreAuthKeyRequest = {
  user?: string
  key?: string
}

export type V1ExpirePreAuthKeyResponse = {
  [key: string]: unknown
}

export type V1GetNodeResponse = {
  node?: V1Node
}

export type V1GetPolicyResponse = {
  policy?: string
  updatedAt?: string
}

export type V1ListApiKeysResponse = {
  apiKeys?: Array<V1ApiKey>
}

export type V1ListNodesResponse = {
  nodes?: Array<V1Node>
}

export type V1ListPreAuthKeysResponse = {
  preAuthKeys?: Array<V1PreAuthKey>
}

export type V1ListUsersResponse = {
  users?: Array<V1User>
}

export type V1MoveNodeResponse = {
  node?: V1Node
}

export type V1Node = {
  id?: string
  machineKey?: string
  nodeKey?: string
  discoKey?: string
  ipAddresses?: Array<string>
  name?: string
  user?: V1User
  lastSeen?: string
  expiry?: string
  preAuthKey?: V1PreAuthKey
  createdAt?: string
  registerMethod?: V1RegisterMethod
  forcedTags?: Array<string>
  invalidTags?: Array<string>
  validTags?: Array<string>
  givenName?: string
  online?: boolean
  approvedRoutes?: Array<string>
  availableRoutes?: Array<string>
  subnetRoutes?: Array<string>
}

export type V1PreAuthKey = {
  user?: V1User
  id?: string
  key?: string
  reusable?: boolean
  ephemeral?: boolean
  used?: boolean
  expiration?: string
  createdAt?: string
  aclTags?: Array<string>
}

export type V1RegisterMethod =
  | 'REGISTER_METHOD_UNSPECIFIED'
  | 'REGISTER_METHOD_AUTH_KEY'
  | 'REGISTER_METHOD_CLI'
  | 'REGISTER_METHOD_OIDC'

export type V1RegisterNodeResponse = {
  node?: V1Node
}

export type V1RenameNodeResponse = {
  node?: V1Node
}

export type V1RenameUserResponse = {
  user?: V1User
}

export type V1SetApprovedRoutesResponse = {
  node?: V1Node
}

export type V1SetPolicyRequest = {
  policy?: string
}

export type V1SetPolicyResponse = {
  policy?: string
  updatedAt?: string
}

export type V1SetTagsResponse = {
  node?: V1Node
}

export type V1User = {
  id?: string
  name?: string
  createdAt?: string
  displayName?: string
  email?: string
  providerId?: string
  provider?: string
  profilePicUrl?: string
}

export type HeadscaleServiceListApiKeysData = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/apikey'
}

export type HeadscaleServiceListApiKeysErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceListApiKeysError =
  HeadscaleServiceListApiKeysErrors[keyof HeadscaleServiceListApiKeysErrors]

export type HeadscaleServiceListApiKeysResponses = {
  /**
   * A successful response.
   */
  200: V1ListApiKeysResponse
}

export type HeadscaleServiceListApiKeysResponse =
  HeadscaleServiceListApiKeysResponses[keyof HeadscaleServiceListApiKeysResponses]

export type HeadscaleServiceCreateApiKeyData = {
  body: V1CreateApiKeyRequest
  path?: never
  query?: never
  url: '/api/v1/apikey'
}

export type HeadscaleServiceCreateApiKeyErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceCreateApiKeyError =
  HeadscaleServiceCreateApiKeyErrors[keyof HeadscaleServiceCreateApiKeyErrors]

export type HeadscaleServiceCreateApiKeyResponses = {
  /**
   * A successful response.
   */
  200: V1CreateApiKeyResponse
}

export type HeadscaleServiceCreateApiKeyResponse =
  HeadscaleServiceCreateApiKeyResponses[keyof HeadscaleServiceCreateApiKeyResponses]

export type HeadscaleServiceExpireApiKeyData = {
  body: V1ExpireApiKeyRequest
  path?: never
  query?: never
  url: '/api/v1/apikey/expire'
}

export type HeadscaleServiceExpireApiKeyErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceExpireApiKeyError =
  HeadscaleServiceExpireApiKeyErrors[keyof HeadscaleServiceExpireApiKeyErrors]

export type HeadscaleServiceExpireApiKeyResponses = {
  /**
   * A successful response.
   */
  200: V1ExpireApiKeyResponse
}

export type HeadscaleServiceExpireApiKeyResponse =
  HeadscaleServiceExpireApiKeyResponses[keyof HeadscaleServiceExpireApiKeyResponses]

export type HeadscaleServiceDeleteApiKeyData = {
  body?: never
  path: {
    prefix: string
  }
  query?: never
  url: '/api/v1/apikey/{prefix}'
}

export type HeadscaleServiceDeleteApiKeyErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceDeleteApiKeyError =
  HeadscaleServiceDeleteApiKeyErrors[keyof HeadscaleServiceDeleteApiKeyErrors]

export type HeadscaleServiceDeleteApiKeyResponses = {
  /**
   * A successful response.
   */
  200: V1DeleteApiKeyResponse
}

export type HeadscaleServiceDeleteApiKeyResponse =
  HeadscaleServiceDeleteApiKeyResponses[keyof HeadscaleServiceDeleteApiKeyResponses]

export type HeadscaleServiceDebugCreateNodeData = {
  body: V1DebugCreateNodeRequest
  path?: never
  query?: never
  url: '/api/v1/debug/node'
}

export type HeadscaleServiceDebugCreateNodeErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceDebugCreateNodeError =
  HeadscaleServiceDebugCreateNodeErrors[keyof HeadscaleServiceDebugCreateNodeErrors]

export type HeadscaleServiceDebugCreateNodeResponses = {
  /**
   * A successful response.
   */
  200: V1DebugCreateNodeResponse
}

export type HeadscaleServiceDebugCreateNodeResponse =
  HeadscaleServiceDebugCreateNodeResponses[keyof HeadscaleServiceDebugCreateNodeResponses]

export type HeadscaleServiceListNodesData = {
  body?: never
  path?: never
  query?: {
    user?: string
  }
  url: '/api/v1/node'
}

export type HeadscaleServiceListNodesErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceListNodesError =
  HeadscaleServiceListNodesErrors[keyof HeadscaleServiceListNodesErrors]

export type HeadscaleServiceListNodesResponses = {
  /**
   * A successful response.
   */
  200: V1ListNodesResponse
}

export type HeadscaleServiceListNodesResponse =
  HeadscaleServiceListNodesResponses[keyof HeadscaleServiceListNodesResponses]

export type HeadscaleServiceBackfillNodeIpsData = {
  body?: never
  path?: never
  query?: {
    confirmed?: boolean
  }
  url: '/api/v1/node/backfillips'
}

export type HeadscaleServiceBackfillNodeIpsErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceBackfillNodeIpsError =
  HeadscaleServiceBackfillNodeIpsErrors[keyof HeadscaleServiceBackfillNodeIpsErrors]

export type HeadscaleServiceBackfillNodeIpsResponses = {
  /**
   * A successful response.
   */
  200: V1BackfillNodeIpsResponse
}

export type HeadscaleServiceBackfillNodeIpsResponse =
  HeadscaleServiceBackfillNodeIpsResponses[keyof HeadscaleServiceBackfillNodeIpsResponses]

export type HeadscaleServiceRegisterNodeData = {
  body?: never
  path?: never
  query?: {
    user?: string
    key?: string
  }
  url: '/api/v1/node/register'
}

export type HeadscaleServiceRegisterNodeErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceRegisterNodeError =
  HeadscaleServiceRegisterNodeErrors[keyof HeadscaleServiceRegisterNodeErrors]

export type HeadscaleServiceRegisterNodeResponses = {
  /**
   * A successful response.
   */
  200: V1RegisterNodeResponse
}

export type HeadscaleServiceRegisterNodeResponse =
  HeadscaleServiceRegisterNodeResponses[keyof HeadscaleServiceRegisterNodeResponses]

export type HeadscaleServiceDeleteNodeData = {
  body?: never
  path: {
    nodeId: string
  }
  query?: never
  url: '/api/v1/node/{nodeId}'
}

export type HeadscaleServiceDeleteNodeErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceDeleteNodeError =
  HeadscaleServiceDeleteNodeErrors[keyof HeadscaleServiceDeleteNodeErrors]

export type HeadscaleServiceDeleteNodeResponses = {
  /**
   * A successful response.
   */
  200: V1DeleteNodeResponse
}

export type HeadscaleServiceDeleteNodeResponse =
  HeadscaleServiceDeleteNodeResponses[keyof HeadscaleServiceDeleteNodeResponses]

export type HeadscaleServiceGetNodeData = {
  body?: never
  path: {
    nodeId: string
  }
  query?: never
  url: '/api/v1/node/{nodeId}'
}

export type HeadscaleServiceGetNodeErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceGetNodeError =
  HeadscaleServiceGetNodeErrors[keyof HeadscaleServiceGetNodeErrors]

export type HeadscaleServiceGetNodeResponses = {
  /**
   * A successful response.
   */
  200: V1GetNodeResponse
}

export type HeadscaleServiceGetNodeResponse =
  HeadscaleServiceGetNodeResponses[keyof HeadscaleServiceGetNodeResponses]

export type HeadscaleServiceSetApprovedRoutesData = {
  body: HeadscaleServiceSetApprovedRoutesBody
  path: {
    nodeId: string
  }
  query?: never
  url: '/api/v1/node/{nodeId}/approve_routes'
}

export type HeadscaleServiceSetApprovedRoutesErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceSetApprovedRoutesError =
  HeadscaleServiceSetApprovedRoutesErrors[keyof HeadscaleServiceSetApprovedRoutesErrors]

export type HeadscaleServiceSetApprovedRoutesResponses = {
  /**
   * A successful response.
   */
  200: V1SetApprovedRoutesResponse
}

export type HeadscaleServiceSetApprovedRoutesResponse =
  HeadscaleServiceSetApprovedRoutesResponses[keyof HeadscaleServiceSetApprovedRoutesResponses]

export type HeadscaleServiceExpireNodeData = {
  body?: never
  path: {
    nodeId: string
  }
  query?: never
  url: '/api/v1/node/{nodeId}/expire'
}

export type HeadscaleServiceExpireNodeErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceExpireNodeError =
  HeadscaleServiceExpireNodeErrors[keyof HeadscaleServiceExpireNodeErrors]

export type HeadscaleServiceExpireNodeResponses = {
  /**
   * A successful response.
   */
  200: V1ExpireNodeResponse
}

export type HeadscaleServiceExpireNodeResponse =
  HeadscaleServiceExpireNodeResponses[keyof HeadscaleServiceExpireNodeResponses]

export type HeadscaleServiceRenameNodeData = {
  body?: never
  path: {
    nodeId: string
    newName: string
  }
  query?: never
  url: '/api/v1/node/{nodeId}/rename/{newName}'
}

export type HeadscaleServiceRenameNodeErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceRenameNodeError =
  HeadscaleServiceRenameNodeErrors[keyof HeadscaleServiceRenameNodeErrors]

export type HeadscaleServiceRenameNodeResponses = {
  /**
   * A successful response.
   */
  200: V1RenameNodeResponse
}

export type HeadscaleServiceRenameNodeResponse =
  HeadscaleServiceRenameNodeResponses[keyof HeadscaleServiceRenameNodeResponses]

export type HeadscaleServiceSetTagsData = {
  body: HeadscaleServiceSetTagsBody
  path: {
    nodeId: string
  }
  query?: never
  url: '/api/v1/node/{nodeId}/tags'
}

export type HeadscaleServiceSetTagsErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceSetTagsError =
  HeadscaleServiceSetTagsErrors[keyof HeadscaleServiceSetTagsErrors]

export type HeadscaleServiceSetTagsResponses = {
  /**
   * A successful response.
   */
  200: V1SetTagsResponse
}

export type HeadscaleServiceSetTagsResponse =
  HeadscaleServiceSetTagsResponses[keyof HeadscaleServiceSetTagsResponses]

export type HeadscaleServiceMoveNodeData = {
  body: HeadscaleServiceMoveNodeBody
  path: {
    nodeId: string
  }
  query?: never
  url: '/api/v1/node/{nodeId}/user'
}

export type HeadscaleServiceMoveNodeErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceMoveNodeError =
  HeadscaleServiceMoveNodeErrors[keyof HeadscaleServiceMoveNodeErrors]

export type HeadscaleServiceMoveNodeResponses = {
  /**
   * A successful response.
   */
  200: V1MoveNodeResponse
}

export type HeadscaleServiceMoveNodeResponse =
  HeadscaleServiceMoveNodeResponses[keyof HeadscaleServiceMoveNodeResponses]

export type HeadscaleServiceGetPolicyData = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/policy'
}

export type HeadscaleServiceGetPolicyErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceGetPolicyError =
  HeadscaleServiceGetPolicyErrors[keyof HeadscaleServiceGetPolicyErrors]

export type HeadscaleServiceGetPolicyResponses = {
  /**
   * A successful response.
   */
  200: V1GetPolicyResponse
}

export type HeadscaleServiceGetPolicyResponse =
  HeadscaleServiceGetPolicyResponses[keyof HeadscaleServiceGetPolicyResponses]

export type HeadscaleServiceSetPolicyData = {
  body: V1SetPolicyRequest
  path?: never
  query?: never
  url: '/api/v1/policy'
}

export type HeadscaleServiceSetPolicyErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceSetPolicyError =
  HeadscaleServiceSetPolicyErrors[keyof HeadscaleServiceSetPolicyErrors]

export type HeadscaleServiceSetPolicyResponses = {
  /**
   * A successful response.
   */
  200: V1SetPolicyResponse
}

export type HeadscaleServiceSetPolicyResponse =
  HeadscaleServiceSetPolicyResponses[keyof HeadscaleServiceSetPolicyResponses]

export type HeadscaleServiceListPreAuthKeysData = {
  body?: never
  path?: never
  query?: {
    user?: string
  }
  url: '/api/v1/preauthkey'
}

export type HeadscaleServiceListPreAuthKeysErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceListPreAuthKeysError =
  HeadscaleServiceListPreAuthKeysErrors[keyof HeadscaleServiceListPreAuthKeysErrors]

export type HeadscaleServiceListPreAuthKeysResponses = {
  /**
   * A successful response.
   */
  200: V1ListPreAuthKeysResponse
}

export type HeadscaleServiceListPreAuthKeysResponse =
  HeadscaleServiceListPreAuthKeysResponses[keyof HeadscaleServiceListPreAuthKeysResponses]

export type HeadscaleServiceCreatePreAuthKeyData = {
  body: V1CreatePreAuthKeyRequest
  path?: never
  query?: never
  url: '/api/v1/preauthkey'
}

export type HeadscaleServiceCreatePreAuthKeyErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceCreatePreAuthKeyError =
  HeadscaleServiceCreatePreAuthKeyErrors[keyof HeadscaleServiceCreatePreAuthKeyErrors]

export type HeadscaleServiceCreatePreAuthKeyResponses = {
  /**
   * A successful response.
   */
  200: V1CreatePreAuthKeyResponse
}

export type HeadscaleServiceCreatePreAuthKeyResponse =
  HeadscaleServiceCreatePreAuthKeyResponses[keyof HeadscaleServiceCreatePreAuthKeyResponses]

export type HeadscaleServiceExpirePreAuthKeyData = {
  body: V1ExpirePreAuthKeyRequest
  path?: never
  query?: never
  url: '/api/v1/preauthkey/expire'
}

export type HeadscaleServiceExpirePreAuthKeyErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceExpirePreAuthKeyError =
  HeadscaleServiceExpirePreAuthKeyErrors[keyof HeadscaleServiceExpirePreAuthKeyErrors]

export type HeadscaleServiceExpirePreAuthKeyResponses = {
  /**
   * A successful response.
   */
  200: V1ExpirePreAuthKeyResponse
}

export type HeadscaleServiceExpirePreAuthKeyResponse =
  HeadscaleServiceExpirePreAuthKeyResponses[keyof HeadscaleServiceExpirePreAuthKeyResponses]

export type HeadscaleServiceListUsersData = {
  body?: never
  path?: never
  query?: {
    id?: string
    name?: string
    email?: string
  }
  url: '/api/v1/user'
}

export type HeadscaleServiceListUsersErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceListUsersError =
  HeadscaleServiceListUsersErrors[keyof HeadscaleServiceListUsersErrors]

export type HeadscaleServiceListUsersResponses = {
  /**
   * A successful response.
   */
  200: V1ListUsersResponse
}

export type HeadscaleServiceListUsersResponse =
  HeadscaleServiceListUsersResponses[keyof HeadscaleServiceListUsersResponses]

export type HeadscaleServiceCreateUserData = {
  body: V1CreateUserRequest
  path?: never
  query?: never
  url: '/api/v1/user'
}

export type HeadscaleServiceCreateUserErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceCreateUserError =
  HeadscaleServiceCreateUserErrors[keyof HeadscaleServiceCreateUserErrors]

export type HeadscaleServiceCreateUserResponses = {
  /**
   * A successful response.
   */
  200: V1CreateUserResponse
}

export type HeadscaleServiceCreateUserResponse =
  HeadscaleServiceCreateUserResponses[keyof HeadscaleServiceCreateUserResponses]

export type HeadscaleServiceDeleteUserData = {
  body?: never
  path: {
    id: string
  }
  query?: never
  url: '/api/v1/user/{id}'
}

export type HeadscaleServiceDeleteUserErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceDeleteUserError =
  HeadscaleServiceDeleteUserErrors[keyof HeadscaleServiceDeleteUserErrors]

export type HeadscaleServiceDeleteUserResponses = {
  /**
   * A successful response.
   */
  200: V1DeleteUserResponse
}

export type HeadscaleServiceDeleteUserResponse =
  HeadscaleServiceDeleteUserResponses[keyof HeadscaleServiceDeleteUserResponses]

export type HeadscaleServiceRenameUserData = {
  body?: never
  path: {
    oldId: string
    newName: string
  }
  query?: never
  url: '/api/v1/user/{oldId}/rename/{newName}'
}

export type HeadscaleServiceRenameUserErrors = {
  /**
   * An unexpected error response.
   */
  default: RpcStatus
}

export type HeadscaleServiceRenameUserError =
  HeadscaleServiceRenameUserErrors[keyof HeadscaleServiceRenameUserErrors]

export type HeadscaleServiceRenameUserResponses = {
  /**
   * A successful response.
   */
  200: V1RenameUserResponse
}

export type HeadscaleServiceRenameUserResponse =
  HeadscaleServiceRenameUserResponses[keyof HeadscaleServiceRenameUserResponses]
